@model Data.Models.Appointment
@{
    ViewData["Title"] = "Appointment";
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<style>
    .modal-dialog {
        width: 650px;
        margin: 30px auto;
    }

    .center-screen {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        min-height: 100vh;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 44px;
        height: 20px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 12px;
            width: 11px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #f39521;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #f39521;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
</style>

<link rel="stylesheet" href="//jonthornton.github.io/jquery-timepicker/jquery.timepicker.css">
<div class="shadow"></div>
<div class="hideSkipLink">
</div>

<div class="prtm-content">
    <div class="row">
        <div class="col-md-4 col-lg-4">
            <div class="btn-group btn-group-justified mrgn-b-xs">
                <a class="btn btn-xs  btn-success" href="#" onclick="GetAppointmentList(2);"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Completed Appointments</a>
                <a class="btn btn-xs  btn-warning" href="#" onclick="GetAppointmentList(3)"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Cancelled Appointments</a>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <a class="btn btn-xs btn-primary getAppointmentList" onclick="GetAppointmentList(1)"> Pending Appointments </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                <label>Doctor</label>
                @Html.DropDownListFor(m => m.DoctorID, new SelectList(ViewBag.Doctor, "ID", "EnFirstName"), "Select doctor", new { @Class = "form-control", onchange = "filterDoctors(this)" })
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group">
                <label>Department</label>
                @Html.DropDownListFor(m => m.DepartmentID, new SelectList(ViewBag.Department, "ID", "Name"), "Select department", new { @Class = "form-control", onchange = "filterDoctors(this)" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-9">
            <div id="dp"></div>
        </div>
        <div class="col-md-3">
            <div id="nav"></div>
        </div>
    </div>
</div>
<div class="clear">
</div>
<div class="popup-result" id="searchwithid1" style="display:none;">
    <div class="popup-result-inner" id="search-data1"></div>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        @Html.Hidden("Args")
        <form method="post" id="appoint-doctor">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" id="close-button" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Appointment</h4>
                </div>
                <div class="modal-body">
                    <div class="row mrgn-b-xs">
                        <div class="col-md-4 col-lg-4">
                            <a class="btn btn-xs btn-primary" href="javascript:void(0);" onclick="AddEvent()"> Save </a>
                            <a class="btn btn-xs btn-warning" href="#" disable> Update </a>
                            <a class="btn btn-xs btn-info" href="#" disable> History </a>
                        </div>
                        <div class="col-md-5 col-lg-5">
                            <a class="btn btn-xs btn-primary" onclick="getPatients()"> PatientList </a>
                            <a class="btn btn-xs btn-info" href="/admin/patient/add"> Add Paitents </a>
                        </div>
                        <div class=" col-md-3 col-lg-3">
                            <div class="form-group">
                                <label>Appointment Status</label>
                                @Html.TextBox("AppointmentStatus", (string)ViewBag.AppointmentStatus, new { @Class = "form-control", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="popup-result center-block" id="searchwithid" style="display:none;"></div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Date</label>
                                @Html.TextBoxFor(m => m.Date, new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Doctor</label>
                                @Html.DropDownList("AppointmentDoctor", new SelectList(ViewBag.Doctor, "ID", "EnFirstName"), "Select doctor", new { @Class = "form-control", id = "DoctorIDModel" })
                                @*@Html.TextBoxFor(x => x.Doctor.EnFirstName)*@
                            </div>
                            <div class="form-group">
                                <label>Department</label>
                                @Html.DropDownList("AppointmentDepartment", new SelectList(ViewBag.Department, "ID", "Name"), "Select department", new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Mobile</label>
                                @Html.TextBox("Mobile", null, new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Note</label>
                                @Html.TextAreaFor(m => m.Note, 4, 20, new { @Class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Time</label>
                                @Html.TextBoxFor(m => m.Time, new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Speciality</label>
                                @Html.DropDownListFor(m => m.SpecialityID, new SelectList(ViewBag.Speciality, "ID", "Name"), "Select speciality", new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Room</label>
                                @Html.DropDownListFor(m => m.RoomID, new SelectList(ViewBag.Room, "ID", "Name"), "Select Room", new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Purpose</label>
                                @Html.DropDownListFor(m => m.PurposeID, new SelectList(ViewBag.Purpose, "ID", "Name"), "Select Purpose", new { @Class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Patient name</label>
                                @Html.DropDownListFor(m => m.UserID, new SelectList(ViewBag.Patient, "ID", "Name"), "Select patient", new { @Class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label>Created By</label>
                            @Html.TextBoxFor(m => m.CreatedBy, new { @Class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-6">
                            <label>Created Date</label>
                            @Html.TextBox("AddedDate", (DateTime)ViewBag.date, new { @Class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Appointment Info</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-row">
                        <div class="col-md-6">
                            <span class="badge badge-light">Doctor: </span>&nbsp;<label id="dctrSpan"></label>
                        </div>
                        <div class="col-md-6">
                            <span class="badge badge-light">Patient: </span>&nbsp;<label id="ptntSpan"></label>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <span class="badge badge-light">Room:</span>&nbsp;<label id="roomSpan"></label>
                        </div>
                        <div class="col-md-6">
                            <span class="badge badge-light">Mobile:</span>&nbsp;<label id="mblSpan"></label>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <span class="badge badge-light">Department:</span>&nbsp;<label id="dptSpan"></label>
                        </div>
                        <div class="col-md-6">
                            <span class="badge badge-light">Note:</span>&nbsp;<label id="noteSpan"></label>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-12">
                            <label>
                                Send SMS:
                                <label class="switch">
                                    <input id="swtchChk" type="checkbox">
                                    <span class="slider round"></span>
                                </label>
                            </label>
                        </div>
                    </div>
                    <form id="smsFrm" hidden>
                        <div class="form-group">
                            <label for="recipient-name" class="col-form-label">To:</label>
                            <input type="text" class="form-control" id="recipient-name">
                        </div>
                        <div class="form-group">
                            <label for="message-text" class="col-form-label">Message:</label>
                            <textarea class="form-control" id="message-text"></textarea>
                            <button type="button" class="btn btn-primary" onclick="SendSMS()">Send</button>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>

        function SendSMS() {
            var data = new FormData();
            data.append("InvoiceNo", $("#InvoiceNo").val());
            data.append("AttachmentName", $("#AttachmentName").val());
            data.append("TriggerType", $("#TriggerType").val());
            data.append("TargetID", $("#TargetID").val());
            data.append("FromMobile", $("#FromMobile").val());
            data.append("ToMobile", $("#ToMobile").val());
            data.append("Body", $("#Body").val());
            //data.append("", $("#File").val());

            $.ajax({
                url: '/admin/SMS/send',
                data: data,
                type: 'Post',
                processData: false, contentType: false,
                success: function (result) {
                    if (result) {
                        alert('SMS sent successfully !')
                        $('#modalDiv').modal('hide');
                        window.location.reload();
                    }
                },
                error: function (xhr, status) {
                    alert(status)
                }
            });
        }

        $(document).ready(function () {
            var url = window.location.href;
            var value = url.substring(url.lastIndexOf('/') + 1);
            if (value == "SendEmail") {
                return false;
            }
            value = value.split('?')
            if (value[1] == "Send=True") {
                alert('SMS sent successfully !');
                window.location.href = '/admin/SMS/SendSMS';
            }
        })

        var subject = "";
        var body = "";
        function NewSMS() {


            body = $("#Body").val();



            $("#Body").val("");
        }

        function Refresh() {


            $("#Body").val(body);
        }

    </script>

    <style>
        textarea.form-control {
            height: 250px;
        }
    </style>
    <script src="//jonthornton.github.io/jquery-timepicker/jquery.timepicker.js"></script>
    <script>

        $(document).on('change', '#swtchChk', function () {
            alert('outside')
            if ($("#swtchChk").prop("checked")) {
                alert('inside')
                $('#smsFrm').show();
            } else {
                $('#smsFrm').hide();
            }

        });

        function appointmentsearch(i) {

            var searchstring = $("#searchinappointment1").val();
            var page = parseInt(i);
            var StartDate = $("#searchstartdate").val();
            // console.log(StartDate);
            var EndDate = $("#searchenddate").val();
            var AppointmentStatusID = $("#appstatusid").val();
            //   alert(AppointmentStatusID);
            debugger
            $.ajax({
                url: '/admin/patient/SearchInCompletedAppointmentList',
                data: {
                    Id: searchstring,
                    page: page,
                    StartDate: StartDate,
                    EndDate: EndDate,
                    AppointmentStatusID: AppointmentStatusID

                },
                success: function (result) {
                    debugger
                    //
                    $("#search-data1").empty();
                    $("#search-data1").append(result);
                    $("#searchinappointment1").show();
                    $("#searchinappointment1").val(searchstring);
                    $("#searchstartdate").val(StartDate);
                    $("#searchenddate").val(EndDate);
                    $("#searchinappointment1").focus();

                }
            });
        }
        function GetAppointmentList(appointmentstatus) {
            //debugger
            //  $("#appointmentstatusid").val(appointmentstatus);
            $.ajax({
                url: '/admin/patient/AppointmentListOfStatus?AppointmentStatus=' + appointmentstatus,
                type: 'GET',
                success: function (result) {
                    debugger
                    $("#searchwithid1").show();
                    $("#search-data1").html(result);



                },
                error: function (xhr, status) {
                    debugger
                }
            });
        }

        function closediv1() {
            $("#searchwithid1").hide();
        }

        $(function () {
            $("#Date").datepicker();
        });

        $(function () {
            $('#Time').timepicker({
                timeFormat: 'h:mm p',
                interval: 60,
                minTime: '10',
                maxTime: '6:00pm',
                defaultTime: '11',
                startTime: '10:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });
        });
    </script>

    <script type="text/javascript">

        var nav = new DayPilot.Navigator("nav");
        nav.showMonths = 3;
        nav.skipMonths = 3;
        nav.selectMode = "week";
        nav.onTimeRangeSelected = function (args) {
            dp.startDate = args.start;
            dp.days = args.days;
            dp.update();

        };
        nav.init();


        var Columndata;

        var dp = new DayPilot.Calendar("dp");
        //dp.viewType = "Resources";
        //dp.viewType = "Resources";
        dp.viewType = "WorkWeek";
        //  dp.headerLevels = 2;
        debugger

        dp.columns = [];

        $.get('GetDoctorColumn', { doctorID: null, departmentID: null }, function (Columndata) {
            debugger
            dp.columns = Columndata.data;
            //  console.log(Columndata.data);
            dp.update();
        });

        // bubble, with async loading
        dp.bubble = new DayPilot.Bubble({
            cssClassPrefix: "bubble_default",
            onLoad: function (args) {
                var ev = args.source;
                args.async = true;  // notify manually using .loaded()
                // simulating slow server-side load
                setTimeout(function () {
                    args.html = "testing bubble for: <br>" + ev.text();
                    args.loaded();
                }, 500);
            }
        });

        dp.contextMenu = new DayPilot.Menu({
            cssClassPrefix: "menu_default",
            items: [
                { text: "Show event ID", onclick: function () { /*alert("Event value: " + this.source.value());*/ } },
                { text: "Show event text", onclick: function () { /*alert("Event text: " + this.source.text());*/ } },
                { text: "Show event start", onclick: function () { /*alert("Event start: " + this.source.start().toStringSortable());*/ } },
                { text: "Delete", onclick: function () { dp.events.remove(this.source); } }
            ]
        });

        // event moving
        dp.onEventMoved = function (args) {
            dp.message("Moved: " + args.e.text());
        };

        // event resizing
        dp.onEventResized = function (args) {
            dp.message("Resized: " + args.e.text());
        };

        // event creating
        dp.onTimeRangeSelected = function (args) {
            args.async = true;
            console.log(args);
            localStorage.setItem("args", JSON.stringify(args));
            debugger
            var args = JSON.parse(localStorage.getItem("args"));
            var fullDate = new Date(args.start);
            var h = fullDate.getHours();
            var m = fullDate.getMinutes();
            var s = fullDate.getSeconds();
            if (h < 10) h = '0' + h;
            if (m < 10) m = '0' + m;
            if (s < 10) s = '0' + s;
            var time = h + ":" + m + ":" + s;
            var test = fullDate.toLocaleDateString();
            $('#Time').val(time);
            $('#Date').val(test);
            debugger

            SelectedDoctorSettings();

            $("#myModal").modal('show');
        };

        function SelectedDoctorSettings() {


            $('#DoctorIDModel').val();
            $.ajax({
                url: '/admin/patient/getpaitentsinAppointment',
                type: 'get',

                success: function (result) {
                    debugger
                    $('#myModal').modal({
                        backdrop: 'static',
                        keyboard: false
                    }),
                        //
                        $("#searchwithid").empty();
                    $("#searchwithid").append(result);
                    $("#searchinappointment").show();

                }
            });
            var args = JSON.parse(localStorage.getItem("args"));
            var id = args.resource;
            $.ajax({
                url: '/admin/patient/getDoctorDetails',
                type: 'get',
                data: { id: id },

                success: function (result) {
                    console.log("This result", result);
                    function test() {

                    }
                    if (result.personalInformation != null) {
                        $('#SpecialityID').val(result.personalInformation.specialityID);
                    } else {
                        $('#SpecialityID').val("");
                    }
                    $('#DoctorIDModel').val(result.id);

                }
            });
        }



        function AddEvent() {
            debugger
            var args = JSON.parse(localStorage.getItem("args"));
            model = {
                DoctorID: $('#DoctorIDModel').val(),
                UserID: $('#UserID').val(),
                Date: $('#Date').val(),
                Time: $('#Time').val(),
                StartDate: args.start,
                EndDate: args.end,
                SpecialityID: $('#SpecialityID').val(),
                DepartmentID: $('#AppointmentDepartment').val(),
                RoomID: $('#RoomID').val(),
                PurposeID: $('#PurposeID').val(),
                AppointmentStatusID: $('#AppointmentStatusID').val(),
                AddedDate: $("#AddedDate").val(),
                Note: $("#Note").val(),
                CreatedBy: $("#CreatedBy").val()
            }
            $.post("AddAppointment", model, function (result) {
                debugger
                debugger
                dp.clearSelection();
                var e = new DayPilot.Event({
                    start: result.Data.Data.Start,
                    end: result.Data.Data.End,
                    id: DayPilot.guid(),
                    resource: args.resource,
                    text: result.Data.Data.Name
                });
                dp.events.add(e);
                dp.message(result.Data.Message);
                $('#close-button').trigger('click');

            });
        }

        dp.onTimeRangeDoubleClicked = function (args) {
            debugger
            // alert("DoubleClick: start: " + args.start + " end: " + args.end + " resource: " + args.resource);
        };

        dp.onEventClick = function (args) {
            if (args.e.data.Department != null) {
                $("#dptSpan").text(args.e.data.Department)
            }
            if (args.e.data.Doctor != null) {
                $("#dctrSpan").text(args.e.data.Doctor)
            }
            if (args.e.data.Room != null) {
                $("#roomSpan").text(args.e.data.Room)
            }
            if (args.e.data.Mobile != null) {
                $("#mblSpan").text(args.e.data.Mobile)
            }
            if (args.e.data.Patient != null) {
                $("#ptntSpan").text(args.e.data.Patient)
            }
            if (args.e.data.Note != null) {
                $("#noteSpan").text(args.e.data.Note)
            }

            $("#eventModal").modal('show');
        };

        dp.headerHeightAutoFit = true;

        dp.columnBubble = new DayPilot.Bubble({
            onLoad: function (args) {
                var c = args.source;
                args.async = true; // notify manually using .loaded()

                // simulating slow server-side load
                setTimeout(function () {
                    args.html = "testing bubble for: <br>" + c.id + " date: " + c.start; // resource id in resources view
                    args.loaded();
                }, 500);
            }
        });

        //dp.days = DayPilot.Date.daysDiff(nav.selectionStart, nav.selectionEnd);
        dp.startDate = nav.selectionStart;
        //dp.cellDuration = 1440;
        dp.init();

        $.get('GetDoctorAppointments', function (data) {
            debugger
            console.log(data);
            dp.events.list = data.data;
            dp.update();
        });

        function filterDoctors(event) {
            debugger
            var doctorID;
            var departmentID;
            if (event.id == 'DoctorID')
                doctorID = event.value;
            if (event.id == 'DepartmentID')
                departmentID = event.value;

            $.get('GetDoctorColumn', { doctorID: doctorID, departmentID: departmentID }, function (Columndata) {
                debugger
                dp.columns = Columndata.data;
                dp.update();
            });
            debugger
        }
        function getPatients() {
            //  debugger
            $("#searchwithid").show();

        }

    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#theme").change(function (e) {
                dp.theme = this.value;
                dp.update();
            });
        });
        function closediv() {
            $("#searchwithid").hide();
        }
        function patientsearch(i) {

            var searchstring = $("#searchinappointment").val();
            var page = parseInt(i);
            $.ajax({
                url: '/admin/patient/SearchInAppointmentList',
                data: {
                    Id: searchstring,
                    "page": page,
                },
                success: function (result) {
                    debugger
                    $('#myModal').modal({
                        backdrop: 'static',
                        keyboard: false
                    }),
                        //
                        $("#searchwithid").empty();
                    $("#searchwithid").append(result);
                    $("#searchinappointment").show();
                    $("#searchinappointment").val(searchstring);
                    $("#searchinappointment").focus();

                }
            });
        }
        function searchfilter(i) {
            debugger
            var page = parseInt(i);
            var searchstring = $("#searchinappointment").val();
            $.ajax({
                url: '/admin/patient/SearchInAppointmentList',
                data: {
                    Id: searchstring,
                    "page": page,
                },
                success: function (result) {
                    debugger
                    $('#myModal').modal({
                        backdrop: 'static',
                        keyboard: false
                    }),
                        //
                        $("#searchwithid").empty();
                    $("#searchwithid").append(result);
                    $("#searchinappointment").show();
                    $("#searchinappointment").val(searchstring);
                    $("#searchinappointment").focus();

                }
            });
        }
        function fnExcelReport() {
            var tab_text = "<table border='2px'><tr bgcolor='#87AFC6'>";
            var textRange; var j = 0;
            var tab = document.getElementById('appointmentTbl'); // id of table

            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + "</tr>";
            }

            tab_text = tab_text + "</table>";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE ");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
                txtArea1.document.open("txt/html", "replace");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand("SaveAs", true, "Patients.xls");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

            return (sa);
        }

    </script>
}